#+OPTIONS: ^:{} _:{} num:t toc:t \n:t
#+INCLUDE "../../template-toc.org"
#+SETUPFILE: "../../extension.org"
#+title:Lyx 笔记 
* Preamble
{{{srcbegin(200)}}}
#+begin_example
\usepackage{fontspec,xunicode,xltxtra}
\usepackage{listings}
\usepackage{xcolor}
\usepackage{color}
\usepackage{float}
\usepackage{multicol}
\setmainfont[BoldFont=Adobe Heiti Std]{Adobe Song Std}
\setsansfont[BoldFont=Adobe Heiti Std]{AR PL UKai CN}
\setmonofont{Bitstream Vera Sans Mono}
\XeTeXlinebreaklocale "zh" %
\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt
\newcommand\li{\fontspec{LiSu}}
\newcommand\hei{\fontspec{SimHei}}
\newcommand\you{\fontspec{YouYuan}}
\newcommand\sun{\fontspec{SimSun}}
\newcommand\fangsong{\fontspec{仿宋_GB2312}}
\newcommand\kai{\fontspec{KaiTi_GB2312}}
\usepackage{titlesec}
\titleformat{\chapter}{\centering\huge}{第\thechapter{}章}{1em}{\textbf}
\titleformat{\part}{\centering\huge}{第\thepart{}部分}{1em}{\textbf}
\renewcommand{\contentsname}{目~录}
\renewcommand{\listfigurename}{插图目录}
\renewcommand{\listtablename}{表格目录}
\renewcommand{\indexname}{索引}
\renewcommand{\tablename}{表}
\renewcommand{\figurename}{图}
\lstset{
basicstyle=\scriptsize,
numbers=left,
keywordstyle=\color{blue},
numberstyle={\tiny\color{lightgray}},
stepnumber=1, %行号会逐行往上递增
numbersep=5pt,
commentstyle=\small\color{red},
%backgroundcolor=\color[rgb]{0.95,1.0,1.0},
showspaces=false,
showtabs=false,
frame=shadowbox, framexleftmargin=5mm, rulesepcolor=\color{red!20!green!20!blue!20!},
% frame=single,
% TABframe=single,
tabsize=4,
breaklines=tr,
extendedchars=false %这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题
}
#+end_example
{{{srcend}}}
* 中文段落缩进
  Preamble中添加\usepackage{indentfirst}
* 摘要
#+begin_example
\begin{abstract}
Your abstract goes here...
\end{abstract}
#+end_example
默认的摘要名称为 Abstract。要改变摘要名称: =\renewcommand{\abstractname}{Executive Summary}=
* 公式
** 自定义TAG
   可以用\tag命令来自定义TAG，但在lyx中要先将公式环境切换到ASM环境：Edit->Math->Chang Formula Type->ASM align environment。
** 长公式换行
   [[http://comments.gmane.org/gmane.editors.lyx.general/67870][参考]]
   在公式上右键 AMS enviroment->AMS multiline enviroment，开始输入公式，此公式是左对齐的，在需要换行的地方Ctrl-RET即可新建一行此行的公式是上一行公式的继续，是右对齐的。
   注意：用 =Alt-m (= 类似命令生成的括号内的内容被lyx看成整体不可分割，所以不能在这种括号里面换行（实在没有办法只有用手工输入括号的办法了，这样输出结果括号会略小）。
** theorem
   进入theorem环境：=M-x layout Theorem=
   非Lyx下改变theorem名称和编号：
#+begin_src tex
\newtheoremstyle{mythm}%名字
        {1.5ex plus 1ex minus .2ex}%上方的空行
        {1.5ex plus 1ex minus .2ex }%下方的空行
        {}%内容字体
        {}%缩进
        {\hei}%定理头部字体
        {}%定理头部后的标点
        {1em}%定理头部后的空格
        {}%定理头部的说明
\theoremstyle{mythm}
\newtheorem{definition}{\hspace{2em}定义}[section]
\newtheorem{axiom}{\hspace{2em}公理}
\newtheorem{theorem}{\hspace{2em}定理}[section]
\newtheorem{propsition}{\hspace{2em}命题}[section]
\newtheorem{corollary}{\hspace{2em}推论}[section]
\newtheorem{lemma}{\hspace{2em}引理}[section]
\newtheorem{example}{\hspace{2em}例}[section]
\newtheorem{exercise}{\hspace{2em}习题}[section]
#+end_src
   Lyx下改变theorem名称和编号:
   见[[http://wiki.lyx.org/LyX/I18nLabels][lyx wiki]]
#+begin_src tex
\newtheorem{theo}{定理}[section]
\renewenvironment{thm}{\begin{theo}}{\end{theo}}
#+end_src
* 插入源码
  1. 可以通过 insert->program listing 来插入源码，不过此时源码是没有高亮的。
  2. 可以通过 insert->file->child document来选择源码所在的文件，include type选择program listing，可选标题，more parameters中可以输入language=C++可以通过？来查看更多可用语言。
  默认源码标题类似 Listing 1:标题，可以通过 =\renewcommand{\lstlistingname}{源码}= 变成 源码1：标题
* 日期
  如果不想要日期可以用 =\date{}=
* 参考文献
  默认是Reference，可以修改 =\renewcommand\refname{参考文献}=
* 分栏
  可以用宏包multicol来实现。
#+begin_example
\uspackage{multicol}
\columnseprule=0.2pt %分隔线，默认没有
\begin{multicols}{2}
内容
\end{multicols}
#+end_example
* 设置页边距
  A4默认使用的边距为上下2.54cm,左右3.18cm，可以使用geometry包来更改其默认设置：
#+begin_example
\usepackage{geometry}
\geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}
#+end_example
* 源码高亮包
  lstlisting可以实现源码高亮但颜色单调，可替代之的是minted。
  具体参考：http://www.latexstudio.net/?p=596
{{{left(5)}}}
#+begin_src tex
\documentclass{article}
\usepackage{minted}
\begin{document}
\begin{minted}[linenos=true]{c++}
#include<iostream>
using namespace std;

class A{};
class B{};

class C{
public:
     operator A(){}
     operator B(){}
};

void f(A a){}
void f(B b){}

int main(int argc, char *argv[])
{
     C c;
     f(c);
     return 0;
}
\end{minted}
\end{document}
#+end_src
{{{middle(5)}}}
{{{lightbox(images/minted.png,450)}}} 
{{{right}}}
